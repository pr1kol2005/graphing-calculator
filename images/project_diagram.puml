@startuml
class "sf::Vector2<float>" as C_0011369533705994597869
class C_0011369533705994597869 {
__
}
class "sf::Vector2<int>" as C_0002600167325038268945
class C_0002600167325038268945 {
__
}
class "std::string" as C_0015070288861779828488
class C_0015070288861779828488 {
__
}
class "std::unique_ptr<IExpression>" as C_0014658766721805681730
class C_0014658766721805681730 {
__
}
class "std::basic_string_view<char>" as C_0005583959530034250771
class C_0005583959530034250771 {
__
}
class "std::vector<double>" as C_0004101108369970767411
class C_0004101108369970767411 {
__
}
class "std::unique_ptr<InputField>" as C_0006172602671236523104
class C_0006172602671236523104 {
__
}
class "std::unique_ptr<GraphImplementation>" as C_0017517283236001165451
class C_0017517283236001165451 {
__
}
class "std::unique_ptr<Canvas>" as C_0015342941539595836045
class C_0015342941539595836045 {
__
}
class "std::unique_ptr<ResetButton>" as C_0001972154744645893649
class C_0001972154744645893649 {
__
}
class "std::unique_ptr<GraphView>" as C_0000966479641069824467
class C_0000966479641069824467 {
__
}
class "Canvas" as C_0014971548349524840202
class C_0014971548349524840202 {
+Canvas(double width, double height) : void
..
+AdjustScale(double factor) : void
+Draw(sf::RenderWindow & window) : void
-DrawAxes(sf::RenderWindow & window) : void
-DrawGrid(sf::RenderWindow & window) : void
-DrawNumbers(sf::RenderWindow & window) : void
+GetCenter() const : sf::Vector2f
+GetScale() const : double
+GetXOffset() const : double
+GetYOffset() const : double
+Move(double x_delta, double y_delta) : void
+Reset() : void
__
-center : sf::Vector2f
-grid_step : double
-height : double
-scale : double
-width : double
-x_axis : sf::Vertex[2]
-x_offset : double
-y_axis : sf::Vertex[2]
-y_offset : double
}
class "UnknownSymbolError" as C_0015820084507609131393
class C_0015820084507609131393 {
+UnknownSymbolError(const std::string & symbol = "") : void
__
}
class "WrongExpressionError" as C_0000626201140025210898
class C_0000626201140025210898 {
+WrongExpressionError(const std::string & msg = "") : void
__
}
class "NumberToken" as C_0010376182386861994985
class C_0010376182386861994985 {
+NumberToken(double valuee) : void
__
+value : double
}
class "UnknownToken" as C_0014237075050008292200
class C_0014237075050008292200 {
+UnknownToken(std::string value_) : void
__
+value : std::string
}
class "VariableToken" as C_0007594499529512886508
class C_0007594499529512886508 {
__
}
class "OpeningBracketToken" as C_0015539667817488418999
class C_0015539667817488418999 {
__
}
class "ClosingBracketToken" as C_0011022161020359027620
class C_0011022161020359027620 {
__
}
class "PlusToken" as C_0015486961783918305500
class C_0015486961783918305500 {
__
}
class "MinusToken" as C_0016217885579057757615
class C_0016217885579057757615 {
__
}
class "MultiplyToken" as C_0004371315218311210943
class C_0004371315218311210943 {
__
}
class "DivideToken" as C_0000980545392795749743
class C_0000980545392795749743 {
__
}
class "PowerToken" as C_0013629384983392063059
class C_0013629384983392063059 {
__
}
class "AbsToken" as C_0005810287322720546343
class C_0005810287322720546343 {
__
}
class "SqrtToken" as C_0007661669716814474771
class C_0007661669716814474771 {
__
}
class "SinToken" as C_0013890847064768755819
class C_0013890847064768755819 {
__
}
class "CosToken" as C_0017602930430692160182
class C_0017602930430692160182 {
__
}
class "TanToken" as C_0013135945730050843093
class C_0013135945730050843093 {
__
}
class "AsinToken" as C_0009241589491588572025
class C_0009241589491588572025 {
__
}
class "AcosToken" as C_0012328999586326437012
class C_0012328999586326437012 {
__
}
class "AtanToken" as C_0000945700654535632883
class C_0000945700654535632883 {
__
}
class "SinhToken" as C_0004310236814725354112
class C_0004310236814725354112 {
__
}
class "CoshToken" as C_0016118864790052022843
class C_0016118864790052022843 {
__
}
class "TanhToken" as C_0015244829391941430756
class C_0015244829391941430756 {
__
}
class "AsinhToken" as C_0012158298008518740918
class C_0012158298008518740918 {
__
}
class "AcoshToken" as C_0016374408807045450654
class C_0016374408807045450654 {
__
}
class "AtanhToken" as C_0004108514965869323813
class C_0004108514965869323813 {
__
}
class "LnToken" as C_0008312860420857682050
class C_0008312860420857682050 {
__
}
class "LgToken" as C_0008627138427869899560
class C_0008627138427869899560 {
__
}
class "Log2Token" as C_0002664105095036623692
class C_0002664105095036623692 {
__
}
abstract "IExpression" as C_0011145532357001778110
abstract C_0011145532357001778110 {
+~IExpression() = default : void
..
{abstract} +Calculate(double x = 0) const = 0 : double
__
}
class "Constant" as C_0010078073438086618327
class C_0010078073438086618327 {
+Constant(double value) : void
..
+Calculate(double x = 0) const : double
__
#value_ : double
}
class "Variable" as C_0010224091379075340813
class C_0010224091379075340813 {
+Variable() : void
..
+Calculate(double x = 0) const : double
__
}
abstract "IUnaryOperation" as C_0003654047602719362147
abstract C_0003654047602719362147 {
+IUnaryOperation(std::unique_ptr<IExpression> operand) : void
..
+Calculate(double x = 0) const : double
{abstract} +Operation(double operand) const = 0 : double
__
#operand_ : std::unique_ptr<IExpression>
}
abstract "IBinaryOperation" as C_0015477007610714941769
abstract C_0015477007610714941769 {
+IBinaryOperation(std::unique_ptr<IExpression> lhs, std::unique_ptr<IExpression> rhs) : void
..
+Calculate(double x = 0) const : double
{abstract} +Operation(double lhs, double rhs) const = 0 : double
__
#lhs_ : std::unique_ptr<IExpression>
#rhs_ : std::unique_ptr<IExpression>
}
class "AbsoluteValue" as C_0002648872377582377791
class C_0002648872377582377791 {
#Operation(double operand) const : double
__
}
class "SquareRoot" as C_0000936659452153497111
class C_0000936659452153497111 {
#Operation(double operand) const : double
__
}
class "Sin" as C_0007276738852063068385
class C_0007276738852063068385 {
#Operation(double operand) const : double
__
}
class "Cos" as C_0003665225839011725998
class C_0003665225839011725998 {
#Operation(double operand) const : double
__
}
class "Tan" as C_0010951239326993173265
class C_0010951239326993173265 {
#Operation(double operand) const : double
__
}
class "Asin" as C_0016356280478332091919
class C_0016356280478332091919 {
#Operation(double operand) const : double
__
}
class "Acos" as C_0002278330758747803140
class C_0002278330758747803140 {
#Operation(double operand) const : double
__
}
class "Atan" as C_0012368927776932346456
class C_0012368927776932346456 {
#Operation(double operand) const : double
__
}
class "Sinh" as C_0001333182996068827395
class C_0001333182996068827395 {
#Operation(double operand) const : double
__
}
class "Cosh" as C_0011952193718014713003
class C_0011952193718014713003 {
#Operation(double operand) const : double
__
}
class "Tanh" as C_0014163002189537508933
class C_0014163002189537508933 {
#Operation(double operand) const : double
__
}
class "Asinh" as C_0016249807721689695042
class C_0016249807721689695042 {
#Operation(double operand) const : double
__
}
class "Acosh" as C_0008618058826126538450
class C_0008618058826126538450 {
#Operation(double operand) const : double
__
}
class "Atanh" as C_0016445383060519362229
class C_0016445383060519362229 {
#Operation(double operand) const : double
__
}
class "LogBaseE" as C_0012772274049838447276
class C_0012772274049838447276 {
#Operation(double operand) const : double
__
}
class "LogBaseTwo" as C_0006775371018884358562
class C_0006775371018884358562 {
#Operation(double operand) const : double
__
}
class "LogBaseTen" as C_0011664463813932263143
class C_0011664463813932263143 {
#Operation(double operand) const : double
__
}
class "Sum" as C_0002855974134252107382
class C_0002855974134252107382 {
#Operation(double lhs, double rhs) const : double
__
}
class "Subtract" as C_0006680420947938474806
class C_0006680420947938474806 {
#Operation(double lhs, double rhs) const : double
__
}
class "Multiply" as C_0006209599591027359282
class C_0006209599591027359282 {
#Operation(double lhs, double rhs) const : double
__
}
class "Divide" as C_0012357134877200136645
class C_0012357134877200136645 {
#Operation(double lhs, double rhs) const : double
__
}
class "Power" as C_0005219308653151929648
class C_0005219308653151929648 {
#Operation(double lhs, double rhs) const : double
__
}
class "GraphImplementation" as C_0007984576225387246099
class C_0007984576225387246099 {
+GraphImplementation(std::string_view expression, double left_span, double right_span, int points_number, double grid_step) : void
..
+AdjustSpan(double factor) : void
+CalculatePoints() : void
+GetGridStep() const : double
+GetXCoords() const : std::vector<double>
+GetYCoords() const : std::vector<double>
+Move(double x_delta) : void
+Reset() : void
+UpdateFormula(std::string_view expression) : void
+UpdateSpan(double left_span, double right_span) : void
+UpdateStep(int points_number) : void
__
-formula : std::unique_ptr<IExpression>
-grid_step : double
-left_span : double
-right_span : double
-step : double
-x_coords : std::vector<double>
-y_coords : std::vector<double>
}
class "GraphView" as C_0014771559603893296745
class C_0014771559603893296745 {
+GraphView() = default : void
+GraphView(const std::vector<double> & x_coords, const std::vector<double> & y_coords, double x_offset = DEFAULT_X_OFFSET, double y_offset = DEFAULT_Y_OFFSET, double grid_step = DEFAULT_GRID_STEP, sf::Color color = = DEFAULT_COLOR) : void
..
+Draw(sf::RenderWindow & window) : void
+IsDiscontinuous(double y_1, double y_2) : bool
__
-color : sf::Color
-grid_step : double
-x_coords : std::vector<double>
-x_offset : double
-y_coords : std::vector<double>
-y_offset : double
}
class "InputField" as C_0010059840003532263374
class C_0010059840003532263374 {
+InputField(int x, int y, double width, double height, std::string_view text = "") : void
..
+Draw(sf::RenderWindow & window) : void
+GetText() const : std::string
+HandleEvent(sf::Event event) : void
-SetFocused(bool state) : void
__
-box : sf::RectangleShape
-font : sf::Font
-input_text : std::string
-is_focused : bool
-shown_text : sf::Text
}
abstract "Button" as C_0016642316478377724848
abstract C_0016642316478377724848 {
+~Button() = default : void
..
{abstract} +Draw(sf::RenderWindow & window) = 0 : void
{abstract} +IsMouseOver(int mouse_x, int mouse_y) const = 0 : bool
{abstract} +OnClick() = 0 : void
__
#shape : sf::RectangleShape
}
class "ResetButton" as C_0001568283985016960551
class C_0001568283985016960551 {
+ResetButton(int x, int y, double width, double height) : void
..
+Draw(sf::RenderWindow & window) : void
+IsMouseOver(int mouse_x, int mouse_y) const : bool
+OnClick() : void
+ResetState() : void
__
-is_pressed : bool
}
class "BridgeController" as C_0016626464198588782218
class C_0016626464198588782218 {
+BridgeController(std::unique_ptr<InputField> input_field, std::unique_ptr<GraphImplementation> graph, std::unique_ptr<Canvas> canvas, std::unique_ptr<ResetButton> reset_button) : void
..
-AdjustScale(const sf::Event & event) : void
-DragMouse(const sf::Event & event) : void
+Draw(sf::RenderWindow & window) : void
+HandleEvent(const sf::Event & event) : void
-MoveWithKeyboard(const sf::Event & event) : void
-ProcessInput() : void
-ResetEverything() : void
-StartDragging(const sf::Event & event) : void
-StopDragging(const sf::Event & event) : void
+UpdateGraph() : void
__
-canvas : std::unique_ptr<Canvas>
-graph : std::unique_ptr<GraphImplementation>
-graph_view : std::unique_ptr<GraphView>
-input_field : std::unique_ptr<InputField>
-is_dragging : bool
-last_mouse_pos : sf::Vector2i
-reset_button : std::unique_ptr<ResetButton>
}
C_0014658766721805681730 ..> C_0011145532357001778110
C_0006172602671236523104 ..> C_0010059840003532263374
C_0017517283236001165451 ..> C_0007984576225387246099
C_0015342941539595836045 ..> C_0014971548349524840202
C_0001972154744645893649 ..> C_0001568283985016960551
C_0000966479641069824467 ..> C_0014771559603893296745
C_0014971548349524840202 o-- C_0011369533705994597869 : -center
C_0015820084507609131393 ..> C_0015070288861779828488
C_0000626201140025210898 ..> C_0015070288861779828488
C_0014237075050008292200 o-- C_0015070288861779828488 : +value
C_0011145532357001778110 <|-- C_0010078073438086618327

C_0011145532357001778110 <|-- C_0010224091379075340813

C_0003654047602719362147 o-- C_0014658766721805681730 : #operand_
C_0011145532357001778110 <|-- C_0003654047602719362147

C_0015477007610714941769 o-- C_0014658766721805681730 : #lhs_
C_0015477007610714941769 o-- C_0014658766721805681730 : #rhs_
C_0011145532357001778110 <|-- C_0015477007610714941769

C_0003654047602719362147 <|-- C_0002648872377582377791

C_0003654047602719362147 <|-- C_0000936659452153497111

C_0003654047602719362147 <|-- C_0007276738852063068385

C_0003654047602719362147 <|-- C_0003665225839011725998

C_0003654047602719362147 <|-- C_0010951239326993173265

C_0003654047602719362147 <|-- C_0016356280478332091919

C_0003654047602719362147 <|-- C_0002278330758747803140

C_0003654047602719362147 <|-- C_0012368927776932346456

C_0003654047602719362147 <|-- C_0001333182996068827395

C_0003654047602719362147 <|-- C_0011952193718014713003

C_0003654047602719362147 <|-- C_0014163002189537508933

C_0003654047602719362147 <|-- C_0016249807721689695042

C_0003654047602719362147 <|-- C_0008618058826126538450

C_0003654047602719362147 <|-- C_0016445383060519362229

C_0003654047602719362147 <|-- C_0012772274049838447276

C_0003654047602719362147 <|-- C_0006775371018884358562

C_0003654047602719362147 <|-- C_0011664463813932263143

C_0015477007610714941769 <|-- C_0002855974134252107382

C_0015477007610714941769 <|-- C_0006680420947938474806

C_0015477007610714941769 <|-- C_0006209599591027359282

C_0015477007610714941769 <|-- C_0012357134877200136645

C_0015477007610714941769 <|-- C_0005219308653151929648

C_0007984576225387246099 ..> C_0005583959530034250771
C_0007984576225387246099 o-- C_0014658766721805681730 : -formula
C_0007984576225387246099 o-- C_0004101108369970767411 : -x_coords
C_0007984576225387246099 o-- C_0004101108369970767411 : -y_coords
C_0014771559603893296745 o-- C_0004101108369970767411 : -x_coords
C_0014771559603893296745 o-- C_0004101108369970767411 : -y_coords
C_0010059840003532263374 ..> C_0005583959530034250771
C_0010059840003532263374 o-- C_0015070288861779828488 : -input_text
C_0016642316478377724848 <|-- C_0001568283985016960551

C_0016626464198588782218 ..> C_0010059840003532263374
C_0016626464198588782218 ..> C_0007984576225387246099
C_0016626464198588782218 ..> C_0014971548349524840202
C_0016626464198588782218 ..> C_0001568283985016960551
C_0016626464198588782218 o-- C_0006172602671236523104 : -input_field
C_0016626464198588782218 o-- C_0017517283236001165451 : -graph
C_0016626464198588782218 o-- C_0015342941539595836045 : -canvas
C_0016626464198588782218 o-- C_0000966479641069824467 : -graph_view
C_0016626464198588782218 o-- C_0001972154744645893649 : -reset_button
C_0016626464198588782218 o-- C_0002600167325038268945 : -last_mouse_pos

'Generated with clang-uml, version 0.5.5
'LLVM version Homebrew clang version 19.1.4
@enduml
